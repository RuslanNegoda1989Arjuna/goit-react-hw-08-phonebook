{"version":3,"file":"static/js/428.19fd60df.chunk.js","mappings":"mOAGaA,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,gEAKRE,GAAiBF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,mMAOX,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,MAAxB,IACC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,UAAUC,WAA1B,IAGdC,EAAWV,EAAAA,EAAAA,MAAH,iHAORW,EAAcX,EAAAA,EAAAA,OAAH,+XAWR,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,MAAxB,I,6BC3BfK,EAAiB,CACrBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGCC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MASjB,OACE,+BACE,SAAC,KAAD,CAAQC,cAAeP,EAAgBQ,SAVpB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAChCC,QAAQC,IAAIH,GACZJ,GAASQ,EAAAA,EAAAA,IAASJ,IAGlBC,GACD,EAIG,UACE,UAACpB,EAAD,YACE,UAACQ,EAAD,CAAUgB,QAAQ,GAAlB,sBAEE,SAAC3B,EAAD,CAAU4B,KAAK,OAAOd,KAAK,OAAOe,UAAQ,QAE5C,UAAClB,EAAD,CAAUgB,QAAQ,GAAlB,mBAEE,SAAC3B,EAAD,CAAU4B,KAAK,QAAQd,KAAK,QAAQe,UAAQ,QAE9C,UAAClB,EAAD,CAAUgB,QAAQ,GAAlB,sBAEE,SAAC3B,EAAD,CACE4B,KAAK,WACLd,KAAK,WACLgB,QAAQ,QACRC,MAAM,uBACNF,UAAQ,QAGZ,SAACjB,EAAD,CAAagB,KAAK,SAAlB,4BAKT,E,UClDc,SAASI,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAAChB,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","page/Register/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const InputReg = styled(Field)`\n  font-size: 22px;\n  margin-top: 5px;\n`;\n\nexport const FormRegistrate = styled(Form)`\n  margin: 20px auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  border-radius: 5px;\n  box-shadow: ${props => props.theme.filters.shadow};\n  background-image: ${props => props.theme.gradients.frescoCrush};\n`;\n\nexport const LabelReg = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 22px;\n  margin-bottom: 20px;\n`;\n\nexport const BtnRegister = styled.button`\n  width: 200px;\n  padding: 10px;\n  margin: 0 auto;\n  font-weight: 700;\n  text-transform: uppercase;\n  cursor: pointer;\n\n  border: none;\n  color: rgb(45, 45, 45);\n  border-radius: 5px;\n  box-shadow: ${props => props.theme.filters.shadow};\n  background-color: rgb(250, 240, 40, 0.3);\n  :hover {\n    background-color: #fdbb2d;\n  }\n  :active {\n    transform: translateY(1px);\n  }\n`;\n","import { Formik } from 'formik';\nimport {\n  BtnRegister,\n  FormRegistrate,\n  InputReg,\n  LabelReg,\n} from './RegisterForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\n\nconst registerValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const registerSubmit = (values, { resetForm }) => {\n    console.log(values);\n    dispatch(register(values));\n\n    // скидаємо форму\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik initialValues={registerValues} onSubmit={registerSubmit}>\n        <FormRegistrate>\n          <LabelReg htmlFor=\"\">\n            UserName\n            <InputReg type=\"text\" name=\"name\" required />\n          </LabelReg>\n          <LabelReg htmlFor=\"\">\n            Email\n            <InputReg type=\"email\" name=\"email\" required />\n          </LabelReg>\n          <LabelReg htmlFor=\"\">\n            Password\n            <InputReg\n              type=\"password\"\n              name=\"password\"\n              pattern=\".{8,}\"\n              title=\"8 or more characters\"\n              required\n            />\n          </LabelReg>\n          <BtnRegister type=\"submit\">Register</BtnRegister>\n        </FormRegistrate>\n      </Formik>\n    </>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["InputReg","styled","Field","FormRegistrate","Form","props","theme","filters","shadow","gradients","frescoCrush","LabelReg","BtnRegister","registerValues","name","email","password","RegisterForm","dispatch","useDispatch","initialValues","onSubmit","values","resetForm","console","log","register","htmlFor","type","required","pattern","title","Register","Helmet"],"sourceRoot":""}